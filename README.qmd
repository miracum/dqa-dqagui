---
format: gfm
default-image-extension: ""
editor_options: 
  chunk_output_type: console
---

# DQAgui <img src="man/figures/logo.png" align="right" width="120" />


<!-- badges: start -->
```{r}
#| echo: false
#| message: false
#| results: asis

pkg <- desc::desc_get_field("Package")
cat_var <- paste(
  badger::badge_lifecycle(),
  badger::badge_cran_release(pkg = pkg),
  gsub("summary", "worst", badger::badge_cran_checks(pkg = pkg)),
  badger::badge_cran_download(pkg = pkg, type = "grand-total", color = "blue"),
  badger::badge_cran_download(pkg = pkg, type = "last-month", color = "blue"),
  gsub("netlify\\.com", "netlify.app", badger::badge_dependencies(pkg = pkg)),
  badger::badge_github_actions(action = utils::URLencode("R CMD Check via {tic}")),
  badger::badge_github_actions(action = "lint"),
  badger::badge_github_actions(action = "test-coverage"),
  badger::badge_codecov(ref = desc::desc_get_urls()),
  badger::badge_doi("10.1186/s12911-022-01961-z", color = "yellow"),
  sep = "\n"
)
cat_var |> cat()
```
<!-- badges: end -->

This is the repository of the R package 'DQAgui'. It provides a graphical user interface to the functionalities implemented in [`DQAstats`](https://github.com/miracum/dqa-dqastats).

## Installation

You can install `DQAgui` with:

```{r}
#| eval: false
install.packages("remotes")
remotes::install_github("miracum/dqa-dqagui")
```

## Configuration

The database connection can be configured using environment variables. These can be set using the base R command `Sys.setenv()`.

A detailed description, which environment variables need to be set for the specific databases can be found [here](https://github.com/miracum/misc-dizutils#db_connection).

## Example

This is a basic example to demonstrate how to perform the data quality assessment with `DQAgui`:

```{r}
#| eval: false
library(DQAgui)

# define base paths for shinyFiles::shinyDirChoose
Sys.setenv(
  "CSV_SOURCE_BASEPATH" = system.file("demo_data", package = "DQAstats")
)
Sys.setenv(
  "CSV_TARGET_BASEPATH" = system.file("demo_data", package = "DQAstats")
)

# define path to utilities-folder
utils_path <- system.file("demo_data/utilities",
                         package = "DQAstats")

# filename of the metadata repository
mdr_filename <- "mdr_example_data.csv"

# directory for storing logfiles
logfile_dir <- tempdir()

launch_app(
  port = 3838,
  utils_path = utils_path,
  mdr_filename = mdr_filename,
  logfile_dir = logfile_dir,
  parallel = FALSE
)
```

To open the shiny application in your web-browser, go to `localhost:3838`.

## Demo Usage / Deployment Examples

You can test the package without needing to install anything except [docker](https://docs.docker.com/get-docker/).
:bulb: For further details, see the [Wiki](https://github.com/miracum/dqa-dqastats/wiki/Deployment#dqagui-browser-based-gui-version-of-the-dqa-tool).

## More Infos

- about MIRACUM: <https://www.miracum.org/>
- about the Medical Informatics Initiative: <https://www.medizininformatik-initiative.de/index.php/de>
- about Shiny: <https://www.rstudio.com/products/shiny/>
- RStudio and Shiny are trademarks of RStudio, Inc.
